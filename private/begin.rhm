#lang rhombus/static/and_meta
import:
  meta:
    "type.rhm" as t
  "type_statinfo.rhm" as t_s
  "unify.rhm".unify
  "lazy.rhm" open
  "value.rhm".value

export:
  begin

value.non_macro begin

expr.macro 'begin:
              $expr0
              ...
              $expr':
  ~op_stx self
  ~all_stx stx
  let tv = t.gen_tvar(#false)
  let e:
    '(unify ~expr $(t_s.type_to_syntax(tv)):
        ~init_tvars: []
        ~defns:
          delay($expr0)
          ...
        ~body: $expr)'
  t_s.wrap_type(e.relocate_span([stx]), tv)
