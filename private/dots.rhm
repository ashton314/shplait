#lang rhombus/static/and_meta
import:
  meta:
    "type.rhm" as t
  "type_statinfo.rhm" as t_s
  "value.rhm".value
  rhombus_dyn open

export:
  ....

value.non_macro ....

expr.macro
| '.... $_ ... $()':
    ~op_stx self
    ~all_stx stx
    t_s.wrap_type('block:
                     $('reached_dots'.relocate(self))('$self')',
                  stx,
                  t.gen_tvar(#false))
| '$left .... $_ ... $()':
    ~op_stx self
    ~all_stx stx
    t_s.wrap_type('block:
                     $('reached_dots'.relocate(self))('$self')
                     $left',
                  stx,
                  t.gen_tvar(#false))

fun reached_dots(op :: Dyn):  
  throw Exn.Fail.Syntax("reached an incomplete expression",
                        Continuation.current_marks(),
                        [op.relocate_span([op])])
