#lang rhombus/static/and_meta
import:
  meta:
    "id_map.rhm" open
    "box.rhm" open
    "type.rhm" as t
  "frame.rhm" as f

export:
  meta:
    typecheck_do

meta:
  fun typecheck_do():
    let frame = f.get_current_frame()
    fun for_each_frame(proc):
      recur loop (frame :: f.Frame = frame):
        proc(frame)
        for:
          each child: frame.children
          loop(child)
    for_each_frame(fun (fr :: f.Frame):
                     when fr.result_tvar
                     | fr.tail_unify(fr.result_tvar))
    for_each_frame(fun (fr :: f.Frame):
                     for:
                       each unify_thunk: frame.unifies
                       unify_thunk())
