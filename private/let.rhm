#lang rhombus/static/and_meta
import:
  "def.rhm" as d
  "block.rhm" as b

export:
  rename:
    shlet as let
  letrec

expr.macro 'shlet $(id :: Identifier) = $rhs ...:
              $(body :: Group)':
  ~all_stx stx
  def tmp = Syntax.make_temp_id(id, ~keep_name: #true)
  '(b.block:
      d.def $tmp = $rhs ...
      $('(b.block:
            d.def $id = $tmp
            $body)'.relocate_span([stx])))'.relocate_span([stx])

expr.macro 'letrec $(id :: Identifier) = $rhs ...:
              $(body :: Group)':
  ~all_stx stx
  '(b.block:
      d.def $id = $rhs ...
      $body)'.relocate_span([stx])

